#summary Présentation de Zendex_Bootstrap

= Zendex_Bootstrap =

Le package Bootstrap vous permet de configurer le bootstrap de votre application par l'intermediaire d'un fichier de configuration XML.

L'objectif principal est de pouvoir étendre au maximum le parser du fichier XML.
Vous pouvez ainsi utiliser Zendex_Bootstrap pour vos propres classes ou fonctionnalités.


= Zendex_Bootstrap_Parser =
== Principe d'utilisation ==

Dans Zend_Bootstrap, un parser sert à représenter un balisage XML préçis sous forme de classes et méthodes.

Dans un premier temps, voici un exemple simple de configuration XML avec un parser que nous allons appeler MyParser :

==== Fichier bootstrap.xml ====
{{{
<?xml version="1.0"?>
<Bootstrap>
    // Chargement d'un parser préçis.
    <LoadParser className="MyParser" />

    // Configuration du parser
    <MyParser>
        <MyMethod>
            <MyArgument>MyValue</MyArgument>
        </MyMethod>
    </MyParser>
</Bootstrap>
}}}

Ici, le parser MyParser est représenté par la classe *_Zendex_Bootstrap_Parser_MyParser_*.

Observer ci-dessous comment nous représentons chaque noeud xml.

==== Fichier Zendex/Bootstrap/Parser/MyParser.php ====
{{{
class Zendex_Bootstrap_Parser_MyParser extends Zendex_Bootstrap_Parser_Abstract
{
    public function MyParser($xml) 
    {
        // Ici on lance le parcours du noeud xml <MyParser>
        $this->_parseElement($xml);
    }

    public function MyMethod($xml) 
    {
        // Ici retourne "MyValue"
        echo (string) $xml->MyArgument;
    }
}
}}}

Maintenant, observer ci-dessous le bootstrap de notre application :

==== Fichier Bootstrap /htdocs/index.php ====
{{{
// Notez qu'il faut définir la librarie Zend et Zendex dans l'include_path.

// Lance le bootstrap
Zendex_Bootstrap::launch('bootstrap.xml');
}}}

==== Sortie HTML de /htdocs/index.php ====
{{{
MyValue
}}}

== Les parsers pré-définis ==
Vous allez mieux comprendre toute l'utilitée d'un tel système :

=== Zendex_Bootstrap_Parser_Zend ===
Pour connaître toutes les possibilitées du parser Zend, rendez-vous sur ZendexBootstrapParserZendFR

==== Fichier bootstrap.xml ====
{{{
<?xml version="1.0"?>
<Bootstrap>
    // Chargement d'un parser Zend.
    <LoadParser className="*Zend*" />

    // Configuration du parser
    <Zend version="1.0.3">
        <Controller>
            <Front>
                <addControllerDirectory>
        	    <dir module="MyModule">/path/to/my/module/controller/directory</dir>
        	    <dir module="otherModule">/path/to/other/module/controller/directory</dir>
                </addControllerDirectory>
                <addModuleDirectory>
        	    <dir>/path/to/my/modules</dir>
                </addModuleDirectory>
            </Front>
        </Controller>
    </Zend>
</Bootstrap>
}}}

Ici, cette configuration executera automatiquement la méthode Zend_Front_Controller::addControllerDirectory() autant de fois qu'il y aura de balises <dir>, idem pour Zend_Front_Controller::addModuleDirectory().

==== Aperçu de la classe Zendex_Bootstrap_Parser_Zend ====
{{{
class Zendex_Bootstrap_Parser_Zend extends Zendex_Bootstrap_Parser_Abstract
{
    public function Zend($xml) 
    {
        $this->_parseElement($xml);
    }

    public function Controller($xml) 
    {
        $this->_parseElement($xml, 'Controller_');
    }

    public function Controller_Front($xml) 
    {
        $this->_parseElement($xml, 'Controller_Front_');
    }

    public function Controller_Front_addControllerDirectory($xml) 
    {
        foreach($xml->dir as $directory) {
	    $module = $this->_toString($directory['module']);
	    $dir = trim( (string) $directory);						
	    Zend_Controller_Front::getInstance()->addControllerDirectory($dir, $module);
	    unset($module, $dir);
	}
    }

    public function Controller_Front_addModuleDirectory($xml) 
    {
        foreach($xml->dir as $directory) {
	    $dir = trim( (string) $directory);						
	    Zend_Controller_Front::getInstance()->addModuleDirectory($dir);
	    unset($dir);
	}
    }
}
}}}

=== Zendex_Bootstrap_Parser_IncludePath ===
==== Pour la définition de l'include_path ====